# yamllint disable rule:line-length
# yaml-language-server: $schema=https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/ansible.json#/$defs/tasks
# yamllint enable rule:line-length
---
- name: Download and Install Go & Purge Old Go
  when: ansible_machine == 'arm64'
  vars:
    go_sha256: bf8e388b09134164717cd52d3285a4ab3b68691b80515212da0e9f56f518fb1e  # yamllint disable-line rule:line-length
    go_version: 1.22.0
    go_archive_name: go{{ go_version }}.darwin-arm64
    go_opt_dir: "{{ common_opt }}/go-{{ go_version }}"
    go_install_dir: "{{ go_opt_dir }}/{{ go_archive_name }}"

    go_packages:
      - package_name: golang.org/x/tools/gopls
        binary_name: gopls
      - package_name: github.com/go-task/task/v3/cmd/task
        binary_name: task
  environment:
    GOPATH: "{{ go_opt_dir }}"
  block:
    - name: Download and Extract Tarball
      ansible.builtin.import_role:
        name: download_and_extract_tar
      vars:
        download_and_extract_tar_archive_name: "{{ go_archive_name }}.tar.gz"
        download_and_extract_tar_download_url: https://go.dev/dl/{{ go_archive_name }}.tar.gz  # yamllint disable-line rule:line-length
        download_and_extract_tar_install_dir: "{{ go_archive_name }}"
        download_and_extract_tar_opt_dir: "{{ go_opt_dir }}"
        download_and_extract_tar_pretty_name: Go
        download_and_extract_tar_sha256: "{{ go_sha256 }}"
        download_and_extract_tar_tempdir_path: "{{ tempdir.path }}"
        download_and_extract_tar_verify: go/bin/go

    - name: Link Go Binaries
      ansible.builtin.file:
        state: link
        src: "{{ item }}"
        dest: "{{ common_bin }}/{{ item | basename }}"
      with_fileglob:
        - "{{ go_install_dir }}/go/bin/*"

    - name: Install Go Packages
      ansible.builtin.command:
        cmd: go install {{ item.package_name }}@latest
      register: result
      changed_when: result.stderr != ""
      loop: "{{ go_packages }}"

    - name: Link Go Package Binaries
      ansible.builtin.file:
        state: link
        src: "{{ go_opt_dir }}/bin/{{ item.binary_name }}"
        dest: "{{ common_bin }}/{{ item.binary_name }}"
      loop: "{{ go_packages }}"

    - name: Purge Old Go
      ansible.builtin.import_role:
        name: purge_old_install
      vars:
        purge_old_install_new_install: "{{ go_opt_dir }}"
        purge_old_install_pattern: go-*
        purge_old_install_pretty_name: Go
