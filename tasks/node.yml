---
- name: Install Nodejs
  when: ansible_machine == 'arm64'
  vars:
    node_version: v18.16.0
    node_archive_name: node-v18.16.0-darwin-arm64
    node_opt_dir: "{{ ansible_user_dir }}/opt/{{ node_archive_name }}"

    npm_packages:
      - "@astrojs/language-server"
      - "@tailwindcss/language-server"
      - prettier
      - typescript
      - typescript-language-server
      - vscode-langservers-extracted
      - yaml-language-server
  block:
    - name: Download Nodejs tar
      ansible.builtin.get_url:
        url: "https://nodejs.org/dist/{{ node_version }}/{{ node_archive_name }}.tar.gz"  # yamllint disable-line rule:line-length
        checksum: sha256:82c7bb4869419ce7338669e6739a786dfc7e72f276ffbed663f85ffc905dcdb4  # yamllint disable-line rule:line-length
        dest: "/tmp/{{ node_archive_name }}.tar.gz"
        mode: "755"

    - name: Ensure opt folder
      ansible.builtin.file:
        state: directory
        path: "{{ ansible_user_dir }}/opt"
        mode: "755"

    - name: Unarchive Nodejs tar
      ansible.builtin.unarchive:
        src: "/tmp/{{ node_archive_name }}.tar.gz"
        dest: "{{ ansible_user_dir }}/opt"
        remote_src: true
        creates: "{{ node_opt_dir }}"
        mode: "755"

    - name: Install NPM Packages
      community.general.npm:
        global: true
        name: "{{ item }}"
        state: latest
      loop: "{{ npm_packages }}"
      environment:
        PATH: "{{ node_opt_dir }}/bin:{{ ansible_env.PATH }}"

    - name: Ensure bin folder
      ansible.builtin.file:
        state: directory
        path: "{{ ansible_user_dir }}/bin"
        mode: "755"

    - name: Link Nodejs and NPM Package Binaries
      ansible.builtin.file:
        state: link
        src: "{{ item }}"
        dest: "{{ ansible_user_dir }}/bin/{{ item | basename }}"
      with_fileglob:
        - "{{ node_opt_dir }}/bin/*"

    - name: Find Old Nodejs
      ansible.builtin.find:
        paths: "{{ ansible_user_dir }}/opt"
        pattern: "node-v*"
        file_type: directory
      register: old_node

    - name: Purge Old Nodejs
      ansible.builtin.file:
        state: absent
        path: "{{ item.path }}"
      vars:
        paths_to_keep:
          - "{{ node_opt_dir }}"
      when: item.path not in paths_to_keep
      loop: "{{ old_node.files }}"
